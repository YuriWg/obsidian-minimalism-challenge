/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// main.ts
__export(exports, {
  default: () => MinimalismChallengePlugin
});
var import_obsidian = __toModule(require("obsidian"));
var ITEM_CATEGORIES = {
  "\u8863\u7269": { color: "#B4846C", icon: "\u{1F9E3}", order: 1 },
  "\u65E5\u7528\u54C1": { color: "#A7B89D", icon: "\u{1F9F4}", order: 2 },
  "\u98DF\u7269": { color: "#E1A692", icon: "\u{1F355}", order: 3 },
  "\u7535\u5B50\u4EA7\u54C1": { color: "#7895B2", icon: "\u{1F4F1}", order: 4 },
  "\u6587\u5177": { color: "#BBAB8C", icon: "\u270F\uFE0F", order: 5 },
  "\u4E66\u7C4D": { color: "#E5BA73", icon: "\u{1F4D6}", order: 6 },
  "\u88C5\u9970\u54C1": { color: "#C17C74", icon: "\u{1F380}", order: 7 },
  "\u5176\u5B83": { color: "#939B9F", icon: "\u{1FAD9}", order: 8 },
  "default": { color: "#e8e8e8", icon: "\u{1F4CE}", order: 9 }
};
var DISPOSAL_METHODS = {
  0: { label: "\u7ACB\u5373\u5904\u7406", icon: "\u{1F5D1}\uFE0F" },
  20: { label: "\u63A8\u8350\u820D\u5F03", icon: "\u{1F4E4}" },
  40: { label: "\u7075\u6D3B\u5904\u7406", icon: "\u{1F504}" },
  60: { label: "\u5EFA\u8BAE\u4FDD\u7559", icon: "\u{1F4E5}" },
  80: { label: "\u5FC5\u987B\u4FDD\u7559", icon: "\u{1F4E6}" }
};
var DEFAULT_SETTINGS = {
  challengeYear: new Date().getFullYear(),
  challengeMonth: new Date().getMonth(),
  lifeStage: 1,
  dataFilePath: "minimalism_items_template.md",
  markdownTable: "",
  scoreWeights: {
    freq: 0.8,
    necessity: 0.9,
    irreplace: 0.7,
    space: 0.6,
    multifunction: 0.5,
    emotion: 0.4,
    maintenance: 0.3,
    cost: 0.2
  }
};
var MINIMALISM_VIEW_TYPE = "minimalism-challenge-view";
var MinimalismChallengePlugin = class extends import_obsidian.Plugin {
  activateView() {
    let leaf = this.app.workspace.getLeavesOfType(MINIMALISM_VIEW_TYPE)[0];
    if (!leaf) {
      const rightLeaf = this.app.workspace.getRightLeaf(false);
      if (!rightLeaf) {
        throw new Error("\u65E0\u6CD5\u521B\u5EFA\u65B0\u7684\u5DE5\u4F5C\u533A\u53F6\u5B50");
      }
      leaf = rightLeaf;
      leaf.setViewState({
        type: MINIMALISM_VIEW_TYPE,
        active: true
      });
    } else {
      this.app.workspace.revealLeaf(leaf);
    }
  }
  async onload() {
    await this.loadSettings();
    let needsUpdate = false;
    if (this.settings.scoreWeights.cost !== 0.2) {
      this.settings.scoreWeights.cost = 0.2;
      needsUpdate = true;
    }
    if (needsUpdate) {
      await this.saveSettings();
      console.log("\u5DF2\u66F4\u65B0\u8BBE\u7F6E\u503C\u5230\u6700\u65B0\u9ED8\u8BA4\u503C");
    }
    this.addStyles();
    try {
      await this.ensureDataFileExists();
    } catch (error) {
      console.error("\u521D\u59CB\u5316\u6570\u636E\u6587\u4EF6\u5931\u8D25:", error);
    }
    this.registerView(MINIMALISM_VIEW_TYPE, (leaf) => new MinimalismChallengeView(leaf, this));
    const ribbonIconEl = this.addRibbonIcon("calendar-with-checkmark", "\u6781\u7B80\u4E3B\u4E49\u6311\u6218\u65E5\u5386", () => {
      this.activateView();
    });
    ribbonIconEl.addClass("minimalism-challenge-ribbon-class");
    this.addCommand({
      id: "open-minimalism-calendar",
      name: "\u6253\u5F00\u6781\u7B80\u4E3B\u4E49\u6311\u6218\u65E5\u5386",
      callback: () => {
        this.activateView();
      }
    });
    this.addCommand({
      id: "create-minimalism-data-template",
      name: "\u521B\u5EFA\u6781\u7B80\u4E3B\u4E49\u6311\u6218\u6570\u636E\u6A21\u677F",
      callback: async () => {
        await this.createDataFileTemplate();
      }
    });
    this.addSettingTab(new MinimalismChallengeSettingTab(this.app, this));
  }
  async resetSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS);
    await this.saveSettings();
    new import_obsidian.Notice("\u8BBE\u7F6E\u5DF2\u91CD\u7F6E\u4E3A\u9ED8\u8BA4\u503C");
  }
  async ensureDataFileExists() {
    try {
      const filePath = this.settings.dataFilePath;
      if (!filePath || filePath.trim() === "") {
        console.log("\u6587\u4EF6\u8DEF\u5F84\u4E3A\u7A7A\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u8DEF\u5F84");
        this.settings.dataFilePath = DEFAULT_SETTINGS.dataFilePath;
        await this.saveData(this.settings);
      }
      const file = this.app.vault.getAbstractFileByPath(this.settings.dataFilePath);
      if (!file) {
        console.log("\u6570\u636E\u6587\u4EF6\u4E0D\u5B58\u5728\uFF0C\u521B\u5EFA\u9ED8\u8BA4\u6570\u636E\u6587\u4EF6");
        try {
          await this.createDataFileTemplate();
          console.log("\u6210\u529F\u521B\u5EFA\u9ED8\u8BA4\u6570\u636E\u6587\u4EF6");
        } catch (error) {
          if (error.message && error.message.includes("already exists")) {
            console.log("\u6587\u4EF6\u5DF2\u5B58\u5728\uFF0C\u5C1D\u8BD5\u76F4\u63A5\u52A0\u8F7D");
            await this.loadItemsData();
          } else {
            throw error;
          }
        }
      } else {
        console.log("\u6570\u636E\u6587\u4EF6\u5DF2\u5B58\u5728:", this.settings.dataFilePath);
        await this.loadItemsData();
      }
    } catch (error) {
      console.error("\u68C0\u67E5\u6570\u636E\u6587\u4EF6\u65F6\u51FA\u9519:", error);
    }
  }
  addStyles() {
    const styleEl = document.head.querySelector("style#minimalism-challenge-styles");
    if (styleEl)
      styleEl.remove();
    const style = document.createElement("style");
    style.id = "minimalism-challenge-styles";
    style.type = "text/css";
    style.textContent = `
        .minimalism-challenge-view {
            padding: clamp(10px, 2vw, 20px);
            overflow-y: auto;
            width: 100% !important;
            height: 100%;
            max-width: 1000px !important;
            margin: 0 auto !important;
            box-sizing: border-box !important;
        }
        
        .workspace-leaf-content[data-type="${MINIMALISM_VIEW_TYPE}"] {
            display: flex;
            justify-content: center;
            align-items: flex-start;
            width: 100% !important;
        }
        
        .workspace-leaf-content[data-type="${MINIMALISM_VIEW_TYPE}"] .view-content {
            width: 100% !important; /* \u6539\u4E3A\u81EA\u52A8\u5BBD\u5EA6 */
            max-width: 1000px !important;
        }
        .minimalism-calendar-container {
            background: linear-gradient(135deg, #f5f5f5 0%, #fafafa 100%);
            border-radius: 18px;
            padding: clamp(20px, 3vw, 40px);
            margin: clamp(10px, 2vw, 20px) 0;
            box-shadow: 0 6px 15px rgba(0,0,0,0.05);
            overflow-y: auto;
            width: 100% !important;
            height: 100%;
            max-width: 1000px !important;  /* \u6700\u5927\u5BBD\u5EA6\u9650\u5236 */
            margin: 0 auto !important;     /* \u5C45\u4E2D\u663E\u793A */
            box-sizing: border-box !important;
        }
			/* \u786E\u4FDD\u5185\u90E8\u5143\u7D20\u4E0D\u4F1A\u8D85\u51FA\u5BB9\u5668 */
			.minimalism-calendar-container > * {
				max-width: 100% !important;
			}
			.minimalism-title {
            text-align: center;
            color: #A67F5D;
            font-family: 'Futura', 'Trebuchet MS', -apple-system;
            font-weight: 700;
            font-size: clamp(36px, 5vw, 60px);
            margin: 20px 0 15px;
            opacity: 0.85;
            letter-spacing: -1.5px;
        }

        .minimalism-subtitle {
            text-align: center;
            color: #BEA98B;
            font-family: 'Helvetica Neue', 'Arial', -apple-system;
            font-weight: 500;
            font-size: clamp(20px, 3vw, 30px);
            margin: 0 0 30px;
            opacity: 0.75;
            letter-spacing: 0.2px;
        }

        .stats-panel {
            display: flex;
            flex-direction: column;
            gap: clamp(10px, 2vw, 15px);
            margin: clamp(15px, 3vw, 20px) 0;
            padding: clamp(15px, 2vw, 20px);
        }

        @media (max-width: 768px) {
            .minimalism-calendar-container {
                padding: clamp(15px, 2vw, 25px);
            }
            
            .stats-grid {
                grid-template-columns: 1fr !important;
            }
            
            .category-grid {
                grid-template-columns: repeat(auto-fill, minmax(100px, 1fr)) !important;
            }
        }

        @media (max-width: 480px) {
            .minimalism-title {
                font-size: clamp(28px, 4vw, 36px);
            }
            
            .minimalism-subtitle {
                font-size: clamp(16px, 2.5vw, 20px);
            }
        }
		`;
    document.head.appendChild(style);
  }
  onunload() {
    this.app.workspace.detachLeavesOfType(MINIMALISM_VIEW_TYPE);
    const styleEl = document.head.querySelector("style#minimalism-challenge-styles");
    if (styleEl)
      styleEl.remove();
  }
  async loadSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
  }
  async createDataFileTemplate() {
    const filePath = this.settings.dataFilePath;
    if (!filePath || filePath.trim() === "") {
      throw new Error("\u6587\u4EF6\u8DEF\u5F84\u4E0D\u80FD\u4E3A\u7A7A");
    }
    const file = this.app.vault.getAbstractFileByPath(filePath);
    if (file && file instanceof import_obsidian.TFile) {
      console.log(`\u6587\u4EF6\u5DF2\u5B58\u5728: ${filePath}\uFF0C\u8DF3\u8FC7\u521B\u5EFA`);
      return;
    }
    const year = this.settings.challengeYear;
    const month = String(this.settings.challengeMonth).padStart(2, "0");
    const headers = ["\u65E5\u671F", "\u7269\u54C1", "\u8BB0\u5FC6", "\u544A\u522B\u8BED", "\u5206\u7C7B", "\u4F7F\u7528\u9891\u7387", "\u5FC5\u8981\u6027", "\u4E0D\u53EF\u66FF\u4EE3\u6027", "\u7A7A\u95F4\u8D1F\u62C5", "\u591A\u529F\u80FD\u6027", "\u60C5\u611F\u4EF7\u503C", "\u7EF4\u62A4\u8D39\u7528", "\u83B7\u53D6\u6210\u672C"];
    const templateRows = [
      `| ${year}-${month}-01 | \u65E7T\u6064 | \u5927\u5B66\u65F6\u671F\u8D2D\u4E70\u7684T\u6064\uFF0C\u5DF2\u7ECF\u6709\u4E9B\u892A\u8272\u548C\u78E8\u635F\uFF0C\u4F46\u66FE\u662F\u6211\u6700\u559C\u6B22\u7684\u4E00\u4EF6\u8863\u670D\u3002 | \u966A\u4F34\u4E86\u6211\u7684\u9752\u6625\u5C81\u6708\uFF0C\u611F\u8C22\u4F60\u7684\u670D\u52A1 | \u8863\u7269 | 20 | 30 | 40 | 60 | 50 | 75 | 10 | 40 |`,
      `| ${year}-${month}-02 | \u65E7\u624B\u673A\u5145\u7535\u5668 | \u968F\u7740\u624B\u673A\u66F4\u65B0\u6362\u4EE3\uFF0C\u8FD9\u4E2A\u5145\u7535\u5668\u5DF2\u7ECF\u4E0D\u592A\u9002\u7528\uFF0C\u4F46\u4E00\u76F4\u820D\u4E0D\u5F97\u6254\u6389\u3002 | \u66FE\u7ECF\u7684\u80FD\u91CF\u4F9B\u5E94\u8005\uFF0C\u73B0\u5728\u53EF\u4EE5\u4F11\u606F\u4E86 | \u7535\u5B50\u4EA7\u54C1 | 10 | 15 | 5 | 70 | 10 | 5 | 0 | 30 |`,
      `| ${year}-${month}-03 | \u672A\u8BFB\u5B8C\u7684\u4E66 | \u8D2D\u4E70\u540E\u53EA\u8BFB\u4E86\u51E0\u9875\u5C31\u6401\u7F6E\u7684\u4E66\uFF0C\u4E00\u76F4\u60F3\u627E\u65F6\u95F4\u8BFB\u5B8C\u4F46\u59CB\u7EC8\u6CA1\u6709\u884C\u52A8\u3002 | \u613F\u4F60\u5728\u65B0\u4E3B\u4EBA\u624B\u4E2D\u88AB\u5B8C\u6574\u9605\u8BFB | \u4E66\u7C4D | 5 | 20 | 30 | 60 | 40 | 25 | 0 | 50 |`,
      `| ${year}-${month}-04 | \u88C5\u9970\u82B1\u74F6 | \u642C\u5BB6\u65F6\u8D2D\u4E70\u7684\u88C5\u9970\u54C1\uFF0C\u4F46\u4E0E\u65B0\u5BB6\u7684\u98CE\u683C\u4E0D\u592A\u642D\u914D\uFF0C\u4E00\u76F4\u653E\u5728\u89D2\u843D\u91CC\u3002 | \u613F\u4F60\u5728\u65B0\u5BB6\u4E2D\u7EFD\u653E\u5149\u5F69 | \u88C5\u9970\u54C1 | 0 | 10 | 20 | 50 | 30 | 15 | 20 | 60 |`,
      `| ${year}-${month}-05 | \u8FC7\u671F\u62A4\u80A4\u54C1 | \u66FE\u7ECF\u70ED\u8877\u5C1D\u8BD5\u7684\u62A4\u80A4\u4EA7\u54C1\uFF0C\u4F7F\u7528\u51E0\u6B21\u540E\u5C31\u88AB\u9057\u5FD8\u5728\u62BD\u5C49\u91CC\u3002 | \u8C22\u8C22\u4F60\u8BA9\u6211\u8BA4\u8BC6\u5230\u7B80\u5355\u62A4\u80A4\u7684\u91CD\u8981 | \u65E5\u7528\u54C1 | 5 | 10 | 5 | 80 | 10 | 0 | 10 | 70 |`
    ];
    const markdownTable = [
      `| ${headers.join(" | ")} |`,
      `| ${headers.map(() => "---").join(" | ")} |`,
      ...templateRows
    ].join("\n");
    const templateContent = `---
	created: ${new Date().toISOString().split("T")[0]}
	updated: ${new Date().toISOString().split("T")[0]}
	---

	# \u6781\u7B80\u4E3B\u4E49\u6311\u6218\u7269\u54C1\u6570\u636E

	\u4EE5\u4E0B\u662F\u6781\u7B80\u4E3B\u4E49\u6311\u6218\u7684\u7269\u54C1\u8BB0\u5F55\u8868\u683C\u3002\u60A8\u53EF\u4EE5\u76F4\u63A5\u5728\u6B64\u6587\u4EF6\u4E2D\u7F16\u8F91\u8868\u683C\u5185\u5BB9\uFF0C\u63D2\u4EF6\u4F1A\u81EA\u52A8\u8BFB\u53D6\u5E76\u663E\u793A\u3002

	${markdownTable}

	## \u8868\u683C\u8BF4\u660E
	- \u65E5\u671F\u683C\u5F0F\uFF1AYYYY-MM-DD
	- \u5206\u7C7B\u53EF\u9009\u503C\uFF1A\u8863\u7269\u3001\u7535\u5B50\u4EA7\u54C1\u3001\u4E66\u7C4D\u3001\u6587\u5177\u3001\u53A8\u5177\u3001\u65E5\u7528\u54C1\u3001\u88C5\u9970\u54C1\u3001\u5176\u5B83
	- \u5404\u8BC4\u5206\u9879\u76EE\u8303\u56F4\uFF1A0-100\uFF0C\u6570\u503C\u8D8A\u9AD8\u8868\u793A\u8BE5\u9879\u8BC4\u5206\u8D8A\u9AD8
	`;
    try {
      const fileCheck = this.app.vault.getAbstractFileByPath(filePath);
      if (fileCheck && fileCheck instanceof import_obsidian.TFile) {
        console.log(`\u6587\u4EF6\u5DF2\u5B58\u5728: ${filePath}\uFF0C\u8DF3\u8FC7\u521B\u5EFA`);
        return;
      }
      await this.app.vault.create(filePath, templateContent);
      console.log(`\u5DF2\u521B\u5EFA\u6570\u636E\u6A21\u677F: ${filePath}`);
      this.settings.markdownTable = templateContent;
      await this.saveData(this.settings);
    } catch (error) {
      if (error.message && error.message.includes("already exists")) {
        console.log("\u6587\u4EF6\u5DF2\u5B58\u5728\uFF0C\u5C1D\u8BD5\u52A0\u8F7D\u73B0\u6709\u6587\u4EF6");
        try {
          const file2 = this.app.vault.getAbstractFileByPath(this.settings.dataFilePath);
          if (file2 && file2 instanceof import_obsidian.TFile) {
            const content = await this.app.vault.read(file2);
            this.settings.markdownTable = content;
            await this.saveData(this.settings);
            console.log("\u6210\u529F\u52A0\u8F7D\u73B0\u6709\u6587\u4EF6");
          }
          return;
        } catch (loadError) {
          console.error("\u52A0\u8F7D\u73B0\u6709\u6587\u4EF6\u5931\u8D25:", loadError);
          return;
        }
      }
      console.error("\u521B\u5EFA\u6570\u636E\u6A21\u677F\u5931\u8D25:", error);
    }
  }
  convertMarkdownToJson(markdownTable) {
    if (!markdownTable.trim()) {
      throw new Error("Markdown\u8868\u683C\u4E3A\u7A7A");
    }
    const lines = markdownTable.trim().split("\n");
    if (lines.length < 3) {
      throw new Error("\u65E0\u6548\u7684Markdown\u8868\u683C\u683C\u5F0F");
    }
    const headers = lines[0].split("|").map((h) => h.trim()).filter((h) => h.length > 0);
    const dataLines = lines.slice(2);
    return dataLines.map((line) => {
      const values = line.split("|").map((v) => v.trim()).filter((v) => v.length > 0);
      if (values.length !== headers.length) {
        throw new Error(`\u884C\u6570\u636E\u4E0E\u8868\u5934\u4E0D\u5339\u914D: ${line}`);
      }
      const rowData = {};
      headers.forEach((header, index) => {
        rowData[header] = values[index];
      });
      return rowData;
    });
  }
  async saveMarkdownAsJson() {
    try {
      const jsonData = this.convertMarkdownToJson(this.settings.markdownTable);
      const filePath = this.settings.dataFilePath;
      const file = this.app.vault.getAbstractFileByPath(filePath);
      const jsonContent = JSON.stringify(jsonData, null, 2);
      const fileContent = `---
created: ${new Date().toISOString().split("T")[0]}
updated: ${new Date().toISOString().split("T")[0]}
---

# \u6781\u7B80\u4E3B\u4E49\u6311\u6218\u7269\u54C1\u6570\u636E

\`\`\`json
${jsonContent}
\`\`\`
`;
      if (file && file instanceof import_obsidian.TFile) {
        await this.app.vault.modify(file, fileContent);
      } else {
        await this.app.vault.create(filePath, fileContent);
      }
    } catch (error) {
      throw error;
    }
  }
  async refreshView() {
    const leaves = this.app.workspace.getLeavesOfType(MINIMALISM_VIEW_TYPE);
    for (const leaf of leaves) {
      if (leaf.view instanceof MinimalismChallengeView) {
        await leaf.view.onOpen();
      }
    }
  }
  async saveSettings() {
    const oldFilePath = this.settings.dataFilePath;
    await this.saveData(this.settings);
    if (oldFilePath !== this.settings.dataFilePath) {
      await this.loadItemsData();
    }
    await this.refreshView();
  }
  async loadItemsData() {
    try {
      const filePath = this.settings.dataFilePath;
      const file = this.app.vault.getAbstractFileByPath(filePath);
      if (file && file instanceof import_obsidian.TFile) {
        const content = await this.app.vault.read(file);
        this.settings.markdownTable = content;
        await this.saveData(this.settings);
        console.log(`\u6570\u636E\u5DF2\u4ECE ${filePath} \u52A0\u8F7D`);
      } else {
        console.log(`\u627E\u4E0D\u5230\u6570\u636E\u6587\u4EF6: ${filePath}`);
      }
    } catch (error) {
      console.error("\u52A0\u8F7D\u6570\u636E\u5931\u8D25:", error);
    }
  }
};
var MinimalismChallengeView = class extends import_obsidian.ItemView {
  constructor(leaf, plugin) {
    super(leaf);
    this.plugin = plugin;
  }
  getViewType() {
    return MINIMALISM_VIEW_TYPE;
  }
  getDisplayText() {
    return "\u6781\u7B80\u4E3B\u4E49\u6311\u6218\u65E5\u5386";
  }
  getIcon() {
    return "calendar-with-checkmark";
  }
  async onOpen() {
    const contentEl = this.contentEl;
    contentEl.empty();
    contentEl.addClass("minimalism-challenge-view");
    await this.renderCalendarView(contentEl);
  }
  async renderCalendarView(containerEl) {
    const mainContainer = document.createElement("div");
    mainContainer.className = "minimalism-calendar-container";
    const year = this.plugin.settings.challengeYear;
    const month = this.plugin.settings.challengeMonth;
    mainContainer.innerHTML = `
		<div class="minimalism-title" style="
			text-align: center; 
			color: #A67F5D;
			font-family: 'Futura', 'Trebuchet MS', -apple-system;
			font-weight: 700;
			font-size: 80px;
			margin: 20px 0 15px;
			opacity: 0.85;
			letter-spacing: -1.5px;
			position: relative;
		">
			<span style="
				font-size: 15px;
				position: absolute;
				top: 8px;
				right: 30px;
				font-weight: 400;
				opacity: 0.8;
				background: rgba(166, 127, 93, 0.15);
				padding: 2px 10px;
				border-radius: 20px;
				backdrop-filter: blur(2px);
				background-color: rgba(190, 169, 139, 0.1);
				border: 1.5px solid rgba(166, 127, 93, 0.8);
				color: rgba(166, 127, 93, 0.8);
			">${year} ${String(month).padStart(2, "0")}</span>
			30 Days
		</div>
		<div class="minimalism-subtitle" style="
			text-align: center;
			color: #BEA98B;
			font-family: 'Helvetica Neue', 'Arial', -apple-system;
			font-weight: 500;
			font-size: 40px;
			margin: 0 0 30px;
			opacity: 0.75;
			letter-spacing: 0.2px;
		">Minimalism Game</div>
		<div style="
			text-align: center;
			color: #BEA98B;
			font-family: 'Georgia', 'Times New Roman', serif;
			font-weight: 400;
			font-size: 20px;
			font-style: italic;
			margin: 0 0 15px;
			opacity: 0.7;
		">\u201C Less is more \u201D</div>

	`;
    try {
      const data = await this.loadMinimalismData();
      if (!data || data.length === 0) {
        mainContainer.innerHTML += '<div style="text-align: center; padding: 20px;">\u672A\u627E\u5230\u6570\u636E\uFF0C\u8BF7\u68C0\u67E5\u6570\u636E\u6587\u4EF6\u8DEF\u5F84\u8BBE\u7F6E\u3002</div>';
        containerEl.appendChild(mainContainer);
        return;
      }
      const statsPanel = this.createStatsPanel(data);
      mainContainer.appendChild(statsPanel);
      const tableContainer = this.createCalendarTable(data);
      mainContainer.appendChild(tableContainer);
      setTimeout(() => {
        this.addFlipCardListeners();
      }, 200);
    } catch (error) {
      mainContainer.innerHTML += `<div style="text-align: center; padding: 20px; color: red;">\u52A0\u8F7D\u6570\u636E\u5931\u8D25: ${error.message}</div>`;
    }
    containerEl.appendChild(mainContainer);
  }
  async loadMinimalismData() {
    try {
      const filePath = this.plugin.settings.dataFilePath;
      const fileObj = this.app.vault.getAbstractFileByPath(filePath);
      if (!fileObj || !(fileObj instanceof import_obsidian.TFile)) {
        console.error("\u6570\u636E\u6587\u4EF6\u4E0D\u5B58\u5728:", filePath);
        return [];
      }
      const content = await this.app.vault.read(fileObj);
      const tableRegex = /\|(.+)\|\n\|([-:\s|]+)\|\n((?:\|.+\|\n?)+)/g;
      const tableMatch = tableRegex.exec(content);
      if (tableMatch) {
        const headerLine = tableMatch[1];
        const dataLines = tableMatch[3].trim().split("\n");
        const headers = headerLine.split("|").map((h) => h.trim()).filter((h) => h.length > 0);
        const allData = dataLines.map((line) => {
          const values = line.split("|").map((v) => v.trim()).filter((v) => v.length > 0);
          if (values.length !== headers.length) {
            console.warn(`\u884C\u6570\u636E\u4E0E\u8868\u5934\u4E0D\u5339\u914D: ${line}`);
            return null;
          }
          const rowData = {};
          headers.forEach((header, index) => {
            const value = values[index];
            if (["\u4F7F\u7528\u9891\u7387", "\u5FC5\u8981\u6027", "\u4E0D\u53EF\u66FF\u4EE3\u6027", "\u7A7A\u95F4\u8D1F\u62C5", "\u591A\u529F\u80FD\u6027", "\u60C5\u611F\u4EF7\u503C", "\u7EF4\u62A4\u8D39\u7528", "\u83B7\u53D6\u6210\u672C"].includes(header)) {
              rowData[header] = Number(value) || 0;
            } else {
              rowData[header] = value;
            }
          });
          return rowData;
        }).filter((item) => item !== null);
        const formattedData = allData.map((row) => {
          let dateStr = row["\u65E5\u671F"] || "";
          dateStr = dateStr.replace(/-/g, "");
          return {
            date: dateStr,
            item: row["\u7269\u54C1"] || "",
            memory: row["\u8BB0\u5FC6"] || "",
            epitaph: row["\u544A\u522B\u8BED"] || "",
            category: row["\u5206\u7C7B"] || "default",
            freq: Number(row["\u4F7F\u7528\u9891\u7387"]) || 0,
            necessity: Number(row["\u5FC5\u8981\u6027"]) || 0,
            irreplace: Number(row["\u4E0D\u53EF\u66FF\u4EE3\u6027"]) || 0,
            space: Number(row["\u7A7A\u95F4\u8D1F\u62C5"]) || 0,
            multifunction: Number(row["\u591A\u529F\u80FD\u6027"]) || 0,
            emotion: Number(row["\u60C5\u611F\u4EF7\u503C"]) || 0,
            maintenance: Number(row["\u7EF4\u62A4\u8D39\u7528"]) || 0,
            cost: Number(row["\u83B7\u53D6\u6210\u672C"]) || 0
          };
        });
        const year = this.plugin.settings.challengeYear;
        const month = this.plugin.settings.challengeMonth;
        const yearMonthPrefix = `${year}${String(month).padStart(2, "0")}`;
        const filteredData = formattedData.filter((item) => {
          if (item.date.length !== 8) {
            console.warn(`\u8DF3\u8FC7\u65E0\u6548\u65E5\u671F\u683C\u5F0F: ${item.date}`);
            return false;
          }
          const itemYearMonth = item.date.substring(0, 6);
          const matches = itemYearMonth === yearMonthPrefix;
          if (matches) {
            console.log(`\u5339\u914D\u5230\u8BB0\u5F55: ${item.date}, \u7269\u54C1: ${item.item}`);
          }
          return matches;
        });
        console.log(`\u5DF2\u4ECEmarkdown\u8868\u683C\u52A0\u8F7D ${year}\u5E74${month}\u6708\u7684\u6570\u636E:`, filteredData);
        return filteredData;
      } else {
        const jsonRegex = /```json\s*\n(\[[\s\S]*?\])\s*\n```/;
        const jsonMatch = jsonRegex.exec(content);
        if (jsonMatch) {
          const jsonString = jsonMatch[1];
          const rawData = JSON.parse(jsonString);
          const formattedData = rawData.map((row) => ({
            date: row["\u65E5\u671F"].replace(/-/g, ""),
            item: row["\u7269\u54C1"],
            memory: row["\u8BB0\u5FC6"] || "",
            epitaph: row["\u544A\u522B\u8BED"] || "",
            category: row["\u5206\u7C7B"] || "default",
            freq: Number(row["\u4F7F\u7528\u9891\u7387"]) || 0,
            necessity: Number(row["\u5FC5\u8981\u6027"]) || 0,
            irreplace: Number(row["\u4E0D\u53EF\u66FF\u4EE3\u6027"]) || 0,
            space: Number(row["\u7A7A\u95F4\u8D1F\u62C5"]) || 0,
            multifunction: Number(row["\u591A\u529F\u80FD\u6027"]) || 0,
            emotion: Number(row["\u60C5\u611F\u4EF7\u503C"]) || 0,
            maintenance: Number(row["\u7EF4\u62A4\u8D39\u7528"]) || 0,
            cost: Number(row["\u83B7\u53D6\u6210\u672C"]) || 0
          }));
          const year = this.plugin.settings.challengeYear;
          const month = this.plugin.settings.challengeMonth;
          const yearMonthPrefix = `${year}${String(month).padStart(2, "0")}`;
          const filteredData = formattedData.filter((item) => item.date.startsWith(yearMonthPrefix) || item.date.length === 8 && item.date.substring(0, 6) === yearMonthPrefix);
          console.log(`\u5DF2\u4ECEJSON\u52A0\u8F7D ${year}\u5E74${month}\u6708\u7684\u6570\u636E:`, filteredData);
          return filteredData;
        }
      }
      console.error("\u672A\u5728\u6587\u4EF6\u4E2D\u627E\u5230\u6709\u6548\u7684\u6570\u636E\u683C\u5F0F");
      return [];
    } catch (error) {
      console.error("\u52A0\u8F7D\u6570\u636E\u5931\u8D25:", error);
      return [];
    }
  }
  calculateScore(item) {
    const weights = this.plugin.settings.scoreWeights;
    const totalWeight = Object.values(weights).reduce((sum, weight) => sum + weight, 0);
    const normalizedWeights = Object.fromEntries(Object.entries(weights).map(([key, weight]) => [key, weight / totalWeight]));
    const weightedScores = [
      item.freq * normalizedWeights.freq,
      item.necessity * normalizedWeights.necessity,
      item.irreplace * normalizedWeights.irreplace,
      item.space * normalizedWeights.space,
      item.multifunction * normalizedWeights.multifunction,
      item.emotion * normalizedWeights.emotion,
      item.maintenance * normalizedWeights.maintenance,
      item.cost * normalizedWeights.cost
    ];
    const baseScore = weightedScores.reduce((sum, score) => sum + score, 0);
    const lifeStageMultiplier = this.getLifeStageMultiplier(this.plugin.settings.lifeStage);
    const finalScore = baseScore * lifeStageMultiplier;
    return Math.min(100, Math.max(0, finalScore));
  }
  createStatsPanel(data) {
    const setcolors = Object.fromEntries(Object.entries(ITEM_CATEGORIES).map(([key, value]) => [key, value.color]));
    const categoryIcons = Object.fromEntries(Object.entries(ITEM_CATEGORIES).map(([key, value]) => [key, value.icon]));
    const monthStats = data.reduce((stats, item) => {
      const score = this.calculateScore(item);
      stats.totalScore += score;
      stats.itemCount++;
      stats.categories[item.category] = (stats.categories[item.category] || 0) + 1;
      return stats;
    }, { totalScore: 0, itemCount: 0, categories: {} });
    Object.keys(ITEM_CATEGORIES).forEach((category) => {
      if (category !== "default" && !monthStats.categories[category]) {
        monthStats.categories[category] = 0;
      }
    });
    const statsPanel = document.createElement("div");
    statsPanel.style.cssText = `
			display: flex;
			flex-direction: column;
			gap: 15px;
			margin: 20px 0;
			padding: 20px;
		`;
    statsPanel.innerHTML = `
			<div class="stats-grid" style="
			display: grid;
			grid-template-columns: 1fr;  /* \u9ED8\u8BA4\u5355\u5217\u5E03\u5C40 */
			gap: clamp(10px, 2vw, 20px);
			margin-bottom: clamp(10px, 2vw, 15px);
			width: 100%;
		">
			<div style="
				display: grid;
				grid-template-columns: minmax(150px, 1fr) minmax(200px, 2fr);  /* \u4FEE\u6539\u6700\u5C0F\u5BBD\u5EA6 */
				gap: clamp(10px, 2vw, 20px);
				width: 100%;
				@media (max-width: 768px) {
					grid-template-columns: 1fr;  /* \u5728\u5C0F\u5C4F\u5E55\u4E0A\u53D8\u4E3A\u5355\u5217 */
				}
			">
				<div style="
					display: flex;
					align-items: center;
					padding: clamp(15px, 3vw, 25px);  /* \u4F7F\u7528 clamp \u4F7Fpadding\u81EA\u9002\u5E94 */
					border-radius: 12px;
					min-width: 0;  /* \u9632\u6B62\u6EA2\u51FA */
				">
					<div style="
						width: clamp(40px, 8vw, 60px);  /* \u56FE\u6807\u5927\u5C0F\u81EA\u9002\u5E94 */
						height: clamp(40px, 8vw, 60px);
						display: flex;
						align-items: center;
						justify-content: center;
						border-radius: 12px;
						margin-right: clamp(10px, 3vw, 20px);
					">
						<span style="font-size: clamp(2em, 4vw, 3.2em);">\u{1F4E6}</span>
					</div>
					<div>
						<div style="
							font-size: clamp(1.5em, 3vw, 2em);
							font-weight: 600;
							color: var(--text-normal);
							margin-bottom: 4px;
						">${monthStats.itemCount}</div>
						<div style="
							font-size: clamp(0.8em, 1.5vw, 0.9em);
							color: var(--text-muted);
						">\u5F85\u5904\u7406\u7269\u54C1</div>
					</div>
				</div>

				<div style="
					display: grid;
					grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));  /* \u4FEE\u6539\u4E3A\u81EA\u9002\u5E94\u5217\u6570 */
					gap: clamp(8px, 1.5vw, 15px);
					padding: clamp(10px, 2vw, 15px);
					border-radius: 0px;
					align-items: start;
					min-width: 0;
				">
					${Object.entries(monthStats.categories).sort((a, b) => {
      var _a, _b;
      const orderA = ((_a = ITEM_CATEGORIES[a[0]]) == null ? void 0 : _a.order) || 999;
      const orderB = ((_b = ITEM_CATEGORIES[b[0]]) == null ? void 0 : _b.order) || 999;
      return orderA - orderB;
    }).map(([category, count]) => `
						<div style="
							display: flex;
							align-items: center;
							gap: 0.5rem;
							padding: 0.3rem 0.6rem;
							background: ${setcolors[category] || setcolors.default}99;
							border-radius: 15px;
							border: 0px dashed ${setcolors[category] || setcolors.default}99;
							width: 100%;
							height: 30px;
							margin: auto;
						">
							<span style="
								font-size: 1.4em;
								min-width: 20px;
								text-align: center;
								flex-shrink: 0;
							">${categoryIcons[category] || categoryIcons.default}</span>
							<div style="
								display: flex;
								align-items: center;
								gap: 4px;
								flex: 1;
								justify-content: space-between;
								min-width: 0;
							">
								<span style="
									font-size: 0.8em;
									font-weight: 500;
									color: var(--text-muted);
									white-space: nowrap;
									overflow: hidden;
									text-overflow: ellipsis;
									max-width: 70%;
								">${category}</span>
								<span style="
									font-size: 1em;
									font-weight: 500;
									color: var(--text-normal);
									flex-shrink: 0;
									margin-right: 8px;
								">${count}</span>
							</div>
						</div>
					`).join("")}
				</div>
			</div>
		
			`;
    const scoreGuide = document.createElement("div");
    scoreGuide.style.cssText = `
			position: relative;
			padding: 8px;
			border-radius: 12px;
			font-size: 0.85em;
			margin-bottom: -15px;
		`;
    scoreGuide.innerHTML = `
			<div style="
				display: grid;
				grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
				gap: 10px;
				color: var(--text-normal);
				margin-bottom: 15px;
				overflow-x: auto;
			">
				${[
      { score: "80-100", label: "\u5FC5\u987B\u4FDD\u7559", icon: "\u{1F5C2}\uFE0F" },
      { score: "60-79", label: "\u5EFA\u8BAE\u4FDD\u7559", icon: "\u{1F4E5}" },
      { score: "40-59", label: "\u7075\u6D3B\u5904\u7406", icon: "\u{1F504}" },
      { score: "20-39", label: "\u63A8\u8350\u820D\u5F03", icon: "\u{1F4E4}" },
      { score: "0-19", label: "\u7ACB\u5373\u5904\u7406", icon: "\u{1F5D1}\uFE0F" }
    ].map((item) => `
					<div style="
						display: flex;
						align-items: center;
						gap: 8px;
						width: 100%;
						padding: 3px 8px;
						border-radius: 20px;
					">
						<span style="
							display: inline-block;
							width: 6px;
							height: 6px;
							border-radius: 50%;
						"></span>
						<span>${item.icon}</span>
						<span style="font-weight: 500;">${item.score}</span>
						<span>${item.label}</span>
					</div>
				`).join("")}
			</div>
			<div style="
				position: absolute;
				bottom: -5px;
				left: 0;
				width: 100%;
				height: 1px;
				background: var(--background-modifier-border);
				opacity: 0.8;
			"></div>
		`;
    statsPanel.appendChild(scoreGuide);
    return statsPanel;
  }
  createCalendarTable(data) {
    function getCategoryColor(category) {
      var _a;
      return ((_a = ITEM_CATEGORIES[category]) == null ? void 0 : _a.color) || ITEM_CATEGORIES.default.color;
    }
    function getCategoryIcon(category) {
      var _a;
      return ((_a = ITEM_CATEGORIES[category]) == null ? void 0 : _a.icon) || ITEM_CATEGORIES.default.icon;
    }
    function getDisposalMethod(score) {
      const thresholds = Object.keys(DISPOSAL_METHODS).map(Number).sort((a, b) => b - a);
      for (const threshold of thresholds) {
        if (score >= threshold) {
          return DISPOSAL_METHODS[threshold];
        }
      }
      return DISPOSAL_METHODS[0];
    }
    const tableContainer = document.createElement("div");
    tableContainer.style.cssText = `
			width: 100%;
			margin: 30px 0px;
			padding: 0;
		`;
    let tableHtml = `<div class="grid-container" style=" 
			display: grid; 
			grid-template-columns: repeat(auto-fill, minmax(min(150px, 100%), 1fr)); 
			gap: clamp(10px, 2vw, 15px); 
			width: 100%;
		">`;
    const totalDays = 30;
    const challengeMonth = this.plugin.settings.challengeMonth;
    for (let day = 1; day <= totalDays; day++) {
      const year = this.plugin.settings.challengeYear;
      const month = this.plugin.settings.challengeMonth;
      const dateStr = `${year}${String(month).padStart(2, "0")}${String(day).padStart(2, "0")}`;
      if (day === 1) {
        console.log("\u67E5\u627E\u65E5\u671F:", dateStr);
        console.log("\u53EF\u7528\u6570\u636E:", data);
      }
      const dayRecord = data.find((item) => {
        const formattedDate = dateStr;
        const itemDate = item.date;
        const matches = itemDate === formattedDate;
        if (day === 1) {
          console.log(`\u6BD4\u8F83\u65E5\u671F: ${formattedDate} vs ${itemDate}, \u5339\u914D: ${matches}`);
        }
        return matches;
      });
      if (day === 1 && dayRecord) {
        console.log("\u627E\u5230\u7B2C1\u5929\u8BB0\u5F55:", dayRecord);
      }
      const dayLabel = `Day ${day}`;
      let frontCard = dayRecord ? `
				<div class="card-front" style="
					position: absolute;
					width: 100%;
					height: 100%;
					display: flex;
					flex-direction: column;
					align-items: center;
					justify-content: center;
					backface-visibility: hidden;
					transition: transform 0.6s;
					background: ${getCategoryColor(dayRecord.category)};
					border-radius: 12px;
					padding: 10px;
					opacity: 0.9;
				">
					<div class="item-card" style="
						display: flex;
						flex-direction: column;
						position: relative;
						gap: 5px;
						width: 100%;
						height: 100%;
						color: white;
					">
						<div style="
							font-size: clamp(0.8em, 1.5vw, 0.9em);
    						line-height: 1.4;
							font-weight: 600;
							font-family: 'Inter', -apple-system, sans-serif;
							opacity: 0.9;
							text-align: right;
							position: absolute;
							top: 2px;
							right: 5px;
						">${dayLabel}</div>
						<div style="
							font-size: 0.95em;
							line-height: 1.4;
							position: absolute;
							top: 40%;
							left: 50%;
							transform: translate(-50%, -50%);
							text-align: center;
							width: 98%;
							overflow-wrap: break-word;
						">${dayRecord.epitaph || dayRecord.item}</div>
						<div style="
							display: flex;
							justify-content: space-between;
							align-items: center;
							padding: 8px 1px;
							border-top: 1px dashed rgba(255,255,255,0.2);
							position: absolute;
							bottom: 3px;
							left: 0;
							right: 0;
							margin: 0 5px;
						">
							<span style="
								display: flex;
								align-items: center;
								margin-left: 5px;
								font-size: 0.95em;
							">${getCategoryIcon(dayRecord.category)}</span>
							<span style="
								font-size: 0.75em;
								padding: 2px 8px;
								border-radius: 20px;
								background: rgba(255,255,255,0.2);
								display: flex;
								align-items: center;
								gap: 4px;
							">
								<div style="
									font-weight: 500;
									color: rgba(255,255,255,0.9);
								">${Math.round(this.calculateScore(dayRecord))}</div>
								${getDisposalMethod(this.calculateScore(dayRecord)).icon}
							</span>
						</div>
					</div>
				</div>` : `
				<div class="card-front" style="
					position: absolute;
					width: 100%;
					height: 100%;
					display: flex;
					flex-direction: column;
					align-items: center;
					justify-content: center;
					backface-visibility: hidden;
					background: ${ITEM_CATEGORIES.default.color};
					border-radius: 12px;
					padding: 10px;
				">
					<div style="
						color: white;
						font-size: 0.9em;
						font-weight: 500;
						font-family: 'Inter', -apple-system, sans-serif;
						text-align: right;
					">${dayLabel}</div>
				</div>`;
      let backCard = dayRecord ? `
				<div class="card-back" style="
					position: absolute;
					width: 100%;
					height: 100%;
					display: flex;
					flex-direction: column;
					backface-visibility: hidden;
					transform: rotateY(180deg);
					transition: transform 0.6s;
					background: ${getCategoryColor(dayRecord.category)};
					border-radius: 12px;
					padding: 15px 14px;
					color: white;
				">
					
					<h3 style="
						margin: 5px 0 8px;
						text-align: center;
						font-size: 0.9em;
						font-weight: 500;
						letter-spacing: 0.3px;
						opacity: 0.9;
					">${dayRecord.item}</h3>
					
					<div style="
						flex-grow: 1;
						width: 100%;
						overflow-y: auto;
						scrollbar-width: thin;
						scrollbar-color: rgba(255,255,255,0.3) transparent;
					">
						<p style="
							margin: 0;
							font-size: 0.8em;
							line-height: 1.5;
							padding: 0 5px;
							text-align: left;
							opacity: 0.85;
						">${dayRecord.memory}</p>
					</div>
				</div>` : "";
      tableHtml += `
				<div class="flip-card" style="
					width: 100%;
					height: 150px;
					perspective: 1000px;
					cursor: ${dayRecord ? "pointer" : "default"};
				">
					<div class="flip-card-inner" style="
						position: relative;
						width: 100%;
						height: 100%;
						text-align: center;
						transition: transform 0.7s cubic-bezier(0.68, -0.6, 0.32, 1.6);
						transform-style: preserve-3d;
					">
						${frontCard}
						${backCard}
					</div>
				</div>`;
    }
    tableHtml += `</div>`;
    tableContainer.innerHTML = tableHtml;
    return tableContainer;
  }
  addFlipCardListeners() {
    const flipCards = document.querySelectorAll(".flip-card");
    flipCards.forEach((card) => {
      const inner = card.querySelector(".flip-card-inner");
      const backCard = card.querySelector(".card-back");
      if (!backCard)
        return;
      let isFlipped = false;
      if (!inner)
        return;
      card.addEventListener("click", () => {
        isFlipped = !isFlipped;
        if (isFlipped) {
          inner.style.transform = "rotateY(180deg)";
        } else {
          inner.style.transform = "rotateY(0deg)";
        }
      });
    });
  }
  getLifeStageMultiplier(stage) {
    const multipliers = {
      1: 0.8,
      2: 1,
      3: 1.3
    };
    return multipliers[stage] || 1;
  }
  async onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};
var MinimalismChallengeSettingTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    containerEl.createEl("h2", { text: "\u6781\u7B80\u4E3B\u4E49\u6311\u6218\u65E5\u5386\u8BBE\u7F6E" });
    containerEl.createEl("h3", { text: "\u57FA\u672C\u8BBE\u7F6E" });
    new import_obsidian.Setting(containerEl).setName("\u6311\u6218\u5E74\u4EFD").setDesc("\u8BBE\u7F6E\u5F53\u524D\u6311\u6218\u7684\u5E74\u4EFD").addText((text) => text.setPlaceholder("\u8F93\u5165\u5E74\u4EFD").setValue(this.plugin.settings.challengeYear.toString()).onChange(async (value) => {
      const year = parseInt(value);
      if (!isNaN(year) && year > 2e3 && year < 2100) {
        this.plugin.settings.challengeYear = year;
        await this.plugin.saveSettings();
      }
    }).inputEl.style.width = "100px");
    new import_obsidian.Setting(containerEl).setName("\u6311\u6218\u6708\u4EFD").setDesc("\u8BBE\u7F6E\u5F53\u524D\u6311\u6218\u7684\u6708\u4EFD").addDropdown((dropdown) => dropdown.addOptions({
      "1": "1\u6708",
      "2": "2\u6708",
      "3": "3\u6708",
      "4": "4\u6708",
      "5": "5\u6708",
      "6": "6\u6708",
      "7": "7\u6708",
      "8": "8\u6708",
      "9": "9\u6708",
      "10": "10\u6708",
      "11": "11\u6708",
      "12": "12\u6708"
    }).setValue(this.plugin.settings.challengeMonth.toString()).onChange(async (value) => {
      this.plugin.settings.challengeMonth = parseInt(value);
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u751F\u6D3B\u9636\u6BB5").setDesc("\u8BBE\u7F6E\u60A8\u5F53\u524D\u7684\u751F\u6D3B\u9636\u6BB5\uFF0C\u5F71\u54CD\u7269\u54C1\u8BC4\u5206").addDropdown((dropdown) => dropdown.addOptions({
      "1": "\u7B80\u7EA6\u9636\u6BB5 (0.8\u500D)",
      "2": "\u5E73\u8861\u9636\u6BB5 (1.0\u500D)",
      "3": "\u79EF\u7D2F\u9636\u6BB5 (1.3\u500D)"
    }).setValue(this.plugin.settings.lifeStage.toString()).onChange(async (value) => {
      this.plugin.settings.lifeStage = parseInt(value);
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u6570\u636E\u6587\u4EF6\u8DEF\u5F84").setDesc("\u8BBE\u7F6E\u5B58\u50A8\u7269\u54C1\u6570\u636E\u7684\u6587\u4EF6\u8DEF\u5F84").addText((text) => text.setPlaceholder("minimalism_items.md").setValue(this.plugin.settings.dataFilePath).onChange(async (value) => {
      this.plugin.settings.dataFilePath = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("\u521B\u5EFA\u6570\u636E\u6A21\u677F").setDesc("\u521B\u5EFA\u4E00\u4E2A\u5305\u542BMarkdown\u8868\u683C\u7684\u6A21\u677F\u6587\u4EF6\uFF0C\u60A8\u53EF\u4EE5\u76F4\u63A5\u5728\u6587\u4EF6\u4E2D\u7F16\u8F91\u6570\u636E").addButton((button) => button.setButtonText("\u521B\u5EFA\u6A21\u677F\u6587\u4EF6").onClick(async () => {
      await this.plugin.createDataFileTemplate();
    }));
    containerEl.createEl("h3", { text: "\u8BC4\u5206\u6743\u91CD\u8BBE\u7F6E" });
    const weightDescription = containerEl.createEl("div", {
      attr: {
        style: "margin-bottom: 20px; padding: 10px; background: var(--background-secondary); border-radius: 5px;"
      }
    });
    weightDescription.innerHTML = `
			<p style="margin: 0 0 10px 0; font-size: 0.9em;">\u8BC4\u5206\u8BA1\u7B97\u8BF4\u660E\uFF1A\u6700\u7EC8\u5F97\u5206 = (\u5404\u6307\u6807\u5F97\u5206 \xD7 \u5F52\u4E00\u5316\u6743\u91CD) \xD7 \u751F\u6D3B\u9636\u6BB5\u7CFB\u6570</p>
		`;
    new import_obsidian.Setting(containerEl).addButton((button) => button.setButtonText("\u91CD\u7F6E\u8BBE\u7F6E").onClick(async () => {
      await this.plugin.resetSettings();
      this.display();
    }));
    const weightsContainer = containerEl.createEl("div", {
      attr: {
        style: "border: 1px solid var(--background-modifier-border); border-radius: 8px; padding: 15px; background: var(--background-primary); margin-bottom: 20px;"
      }
    });
    const gridContainer = weightsContainer.createEl("div", {
      attr: {
        style: "display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 15px;"
      }
    });
    const scoreFactors = [
      { id: "freq", name: "\u4F7F\u7528\u9891\u7387", desc: "\u8D8A\u5E38\u7528\u5206\u503C\u8D8A\u9AD8" },
      { id: "necessity", name: "\u5FC5\u8981\u6027", desc: "\u5BF9\u65E5\u5E38\u751F\u6D3B\u7684\u5FC5\u8981\u7A0B\u5EA6" },
      { id: "irreplace", name: "\u4E0D\u53EF\u66FF\u4EE3\u6027", desc: "\u8D8A\u96BE\u66FF\u4EE3\u5206\u503C\u8D8A\u9AD8" },
      { id: "space", name: "\u7A7A\u95F4\u8D1F\u62C5", desc: "\u5360\u7528\u7A7A\u95F4\u8D8A\u5408\u7406\u5206\u503C\u8D8A\u9AD8" },
      { id: "multifunction", name: "\u591A\u529F\u80FD\u6027", desc: "\u529F\u80FD\u8D8A\u591A\u5206\u503C\u8D8A\u9AD8" },
      { id: "emotion", name: "\u60C5\u611F\u4EF7\u503C", desc: "\u60C5\u611F\u4EF7\u503C\u8D8A\u9AD8\u5206\u503C\u8D8A\u9AD8" },
      { id: "maintenance", name: "\u7EF4\u62A4\u8D39\u7528", desc: "\u7EF4\u62A4\u6210\u672C\u8D8A\u4F4E\u5206\u503C\u8D8A\u9AD8" },
      { id: "cost", name: "\u83B7\u53D6\u6210\u672C", desc: "\u6027\u4EF7\u6BD4\u8D8A\u9AD8\u5206\u503C\u8D8A\u9AD8" }
    ];
    scoreFactors.forEach((factor) => {
      const factorContainer = gridContainer.createEl("div", {
        attr: {
          style: "padding: 8px; border-bottom: 1px dashed var(--background-modifier-border);"
        }
      });
      factorContainer.createEl("div", {
        text: factor.name,
        attr: {
          style: "font-weight: 500; margin-bottom: 5px;"
        }
      });
      factorContainer.createEl("div", {
        text: factor.desc,
        attr: {
          style: "font-size: 0.8em; color: var(--text-muted); margin-bottom: 8px;"
        }
      });
      const sliderContainer = factorContainer.createEl("div", {
        attr: {
          style: "display: flex; align-items: center; gap: 10px;"
        }
      });
      const slider = sliderContainer.createEl("input", {
        attr: {
          type: "range",
          min: "0",
          max: "1",
          step: "0.1",
          value: this.plugin.settings.scoreWeights[factor.id].toString(),
          style: "flex: 1;"
        }
      });
      const valueDisplay = sliderContainer.createEl("span", {
        text: this.plugin.settings.scoreWeights[factor.id].toString(),
        attr: {
          style: "min-width: 30px; text-align: center;"
        }
      });
      slider.addEventListener("input", async (e) => {
        const value = parseFloat(e.target.value);
        this.plugin.settings.scoreWeights[factor.id] = value;
        valueDisplay.textContent = value.toString();
        await this.plugin.saveSettings();
      });
    });
    containerEl.createEl("h3", { text: "\u9879\u76EE\u8BF4\u660E" });
    const projectDescription = containerEl.createEl("div", {
      attr: {
        style: "margin-top: 20px; padding: 15px; background: var(--background-secondary); border-radius: 8px; max-height: 500px; overflow-y: auto;"
      }
    });
    const scrollbarStyle = containerEl.createEl("style", {
      text: `
				div[style*="max-height: 500px"] {
					scrollbar-width: thin;
					scrollbar-color: var(--scrollbar-thumb-bg) var(--scrollbar-track-bg);
				}
				div[style*="max-height: 500px"]::-webkit-scrollbar {
					width: 8px;
				}
				div[style*="max-height: 500px"]::-webkit-scrollbar-track {
					background: var(--background-secondary-alt);
					border-radius: 4px;
				}
				div[style*="max-height: 500px"]::-webkit-scrollbar-thumb {
					background: var(--scrollbar-thumb-bg, rgba(0, 0, 0, 0.2));
					border-radius: 4px;
				}
				div[style*="max-height: 500px"]::-webkit-scrollbar-thumb:hover {
					background: var(--scrollbar-thumb-bg-hover, rgba(0, 0, 0, 0.3));
				}
			`
    });
    projectDescription.innerHTML = `
			<h4 style="margin-top: 0; margin-bottom: 10px; color: var(--text-normal);">\u4E3A\u4EC0\u4E48\u8981\u505A\u6781\u7B80\u4E3B\u4E49\u6311\u6218\uFF1F</h4>
			<p style="margin-bottom: 15px; font-size: 0.9em; line-height: 1.5; color: var(--text-normal);">
				\u6781\u7B80\u4E3B\u4E49\u6311\u6218\uFF08Minimalism Game\uFF09\u662F\u4E00\u79CD\u5E2E\u52A9\u4EBA\u4EEC\u51CF\u5C11\u7269\u54C1\u5360\u7528\u3001\u7B80\u5316\u751F\u6D3B\u7684\u5B9E\u8DF5\u65B9\u6CD5\u3002\u5728\u73B0\u4EE3\u6D88\u8D39\u793E\u4F1A\u4E2D\uFF0C\u6211\u4EEC\u5F80\u5F80\u79EF\u7D2F\u4E86\u5927\u91CF\u4E0D\u5FC5\u8981\u7684\u7269\u54C1\uFF0C\u8FD9\u4E9B\u7269\u54C1\u4E0D\u4EC5\u5360\u7528\u7A7A\u95F4\uFF0C\u8FD8\u4F1A\u6D88\u8017\u6211\u4EEC\u7684\u7CBE\u529B\u548C\u6CE8\u610F\u529B\u3002\u751F\u6D3B\u8D8A\u7B80\u5355\uFF0C\u5C31\u6709\u8D8A\u591A\u65F6\u95F4\u53EF\u4E13\u6CE8\u5728\u5065\u5EB7\u3001\u5173\u7CFB\u3001\u521B\u9020\u529B\u3001\u804C\u6DAF\u4E0A\u3002\u901A\u8FC7\u8FD9\u4E2A\u6311\u6218\uFF0C\u6211\u4EEC\u53EF\u4EE5\uFF1A
				<ul style="margin-top: 8px; padding-left: 20px; font-size: 0.9em;">
					<li>\u91CD\u65B0\u5BA1\u89C6\u6211\u4EEC\u4E0E\u7269\u54C1\u7684\u5173\u7CFB</li>
					<li>\u51CF\u5C11\u4E0D\u5FC5\u8981\u7684\u7269\u8D28\u5360\u6709</li>
					<li>\u4E3A\u771F\u6B63\u91CD\u8981\u7684\u4E8B\u7269\u817E\u51FA\u7A7A\u95F4</li>
					<li>\u57F9\u517B\u66F4\u52A0\u81EA\u89C9\u7684\u6D88\u8D39\u4E60\u60EF</li>
					<li>\u51CF\u8F7B\u5FC3\u7406\u8D1F\u62C5\uFF0C\u83B7\u5F97\u66F4\u591A\u81EA\u7531\u611F</li>
				</ul>
			</p>
			
			<h4 style="margin-bottom: 10px; color: var(--text-normal);">\u6311\u6218\u89C4\u5219\u8BF4\u660E</h4>
			<p style="font-size: 0.9em; line-height: 1.5; color: var(--text-normal);">
				\u6781\u7B80\u4E3B\u4E49\u6311\u6218\u7684\u57FA\u672C\u89C4\u5219\u5982\u4E0B\uFF1A
				<ol style="margin-top: 8px; padding-left: 20px; font-size: 0.9em;">
					<li><strong>\u4E3A\u671F30\u5929</strong>\uFF1A\u6311\u6218\u6301\u7EED\u4E00\u4E2A\u6708\uFF0830\u5929\uFF09\u3002</li>
					<li><strong>\u6BCF\u65E5\u5904\u7406\u7269\u54C1</strong>\uFF1A\u6BCF\u5929\u9700\u8981\u5904\u7406\u63891\u4EF6\u7269\u54C1\u3002</li>
					<li><strong>\u8BB0\u5F55\u4E0E\u53CD\u601D</strong>\uFF1A\u5BF9\u4E8E\u6BCF\u4EF6\u7269\u54C1\uFF0C\u8BB0\u5F55\u5B83\u7684\u57FA\u672C\u4FE1\u606F\u3001\u4F7F\u7528\u5386\u53F2\u3001\u60C5\u611F\u8054\u7CFB\uFF0C\u4EE5\u53CA\u4E3A\u4EC0\u4E48\u51B3\u5B9A\u5904\u7406\u5B83\u3002</li>
					<li><strong>\u8BC4\u5206\u7CFB\u7EDF</strong>\uFF1A\u901A\u8FC7\u591A\u4E2A\u7EF4\u5EA6\uFF08\u4F7F\u7528\u9891\u7387\u3001\u5FC5\u8981\u6027\u3001\u60C5\u611F\u4EF7\u503C\u7B49\uFF09\u5BF9\u7269\u54C1\u8FDB\u884C\u8BC4\u5206\uFF0C\u5E2E\u52A9\u51B3\u5B9A\u662F\u5426\u4FDD\u7559\u3002</li>
					<li><strong>\u5904\u7406\u65B9\u5F0F</strong>\uFF1A\u6839\u636E\u7269\u54C1\u7684\u8BC4\u5206\u548C\u72B6\u6001\uFF0C\u9009\u62E9\u9002\u5F53\u7684\u5904\u7406\u65B9\u5F0F\uFF1A
						<ul style="margin-top: 5px; padding-left: 15px;">
							<li>\u6350\u8D60\uFF1A\u9002\u5408\u72B6\u6001\u826F\u597D\u4F46\u4E0D\u518D\u9700\u8981\u7684\u7269\u54C1</li>
							<li>\u51FA\u552E\uFF1A\u6709\u4E00\u5B9A\u4EF7\u503C\u7684\u7269\u54C1</li>
							<li>\u56DE\u6536\uFF1A\u4E0D\u80FD\u7EE7\u7EED\u4F7F\u7528\u4F46\u53EF\u56DE\u6536\u7684\u7269\u54C1</li>
							<li>\u4E22\u5F03\uFF1A\u65E0\u6CD5\u56DE\u6536\u4E14\u65E0\u4F7F\u7528\u4EF7\u503C\u7684\u7269\u54C1</li>
							<li>\u91CD\u65B0\u5B89\u7F6E\uFF1A\u4ECD\u6709\u4EF7\u503C\u4F46\u9700\u8981\u66F4\u5408\u9002\u4F4D\u7F6E\u7684\u7269\u54C1</li>
						</ul>
					</li>
				</ol>
			</p>
			
			<h4 style="margin-bottom: 10px; color: var(--text-normal);">\u4F7F\u7528\u5EFA\u8BAE</h4>
			<p style="font-size: 0.9em; line-height: 1.5; color: var(--text-normal);">
				<ul style="padding-left: 20px; font-size: 0.9em;" >
					<li>\u4ECE\u7B80\u5355\u7684\u7269\u54C1\u5F00\u59CB\uFF0C\u9010\u6E10\u8FC7\u6E21\u5230\u66F4\u6709\u60C5\u611F\u8054\u7CFB\u7684\u7269\u54C1</li>
					<li>\u9080\u8BF7\u670B\u53CB\u6216\u5BB6\u4EBA\u4E00\u8D77\u53C2\u4E0E\uFF0C\u4E92\u76F8\u9F13\u52B1\u548C\u76D1\u7763</li>
					<li>\u4E0D\u8981\u6025\u4E8E\u6C42\u6210\uFF0C\u5173\u6CE8\u8FC7\u7A0B\u4E2D\u7684\u611F\u53D7\u548C\u53D8\u5316</li>
					<li>\u5B9A\u671F\u56DE\u987E\u8BB0\u5F55\uFF0C\u53CD\u601D\u81EA\u5DF1\u7684\u6D88\u8D39\u548C\u6301\u6709\u4E60\u60EF</li>
					<li>\u5B8C\u6210\u6311\u6218\u540E\uFF0C\u5C1D\u8BD5\u5C06\u6781\u7B80\u7406\u5FF5\u878D\u5165\u65E5\u5E38\u751F\u6D3B</li>
				</ul>
			</p>
			
			<div style="margin-top: 15px; font-size: 0.9em; font-style: italic; color: var(--text-muted); text-align: center;">
				"\u62E5\u6709\u66F4\u5C11\uFF0C\u4F53\u9A8C\u66F4\u591A"
			</div>

			<h4 style="margin-bottom: 10px; color: var(--text-normal);">\u63D2\u4EF6\u4F7F\u7528\u8BF4\u660E</h4>
			<p style="font-size: 0.9em; line-height: 1.5; color: var(--text-normal);">
				<ol style="padding-left: 20px; font-size: 0.9em;">
					<li><strong>\u521D\u59CB\u8BBE\u7F6E</strong>\uFF1A
						<ul style="margin-top: 5px; padding-left: 15px;">
							<li>\u5B89\u88C5\u63D2\u4EF6\u540E\uFF0C\u5728\u8BBE\u7F6E\u4E2D\u8BBE\u7F6E\u6311\u6218\u5E74\u4EFD\u548C\u6708\u4EFD</li>
							<li>\u9009\u62E9\u9002\u5408\u60A8\u7684\u751F\u6D3B\u9636\u6BB5\uFF08\u7B80\u7EA6\u3001\u5E73\u8861\u6216\u79EF\u7D2F\uFF09</li>
							<li>\u8BBE\u7F6E\u6570\u636E\u6587\u4EF6\u8DEF\u5F84\uFF0C\u9ED8\u8BA4\u4E3A minimalism_items.md</li>
							<li>\u70B9\u51FB"\u521B\u5EFA\u6A21\u677F\u6587\u4EF6"\u6309\u94AE\u751F\u6210\u521D\u59CB\u6570\u636E\u6587\u4EF6</li>
						</ul>
					</li>
					<li><strong>\u8C03\u6574\u8BC4\u5206\u6743\u91CD</strong>\uFF1A
						<ul style="margin-top: 5px; padding-left: 15px;">
							<li>\u6839\u636E\u60A8\u7684\u4E2A\u4EBA\u60C5\u51B5\u8C03\u6574\u5404\u9879\u8BC4\u5206\u56E0\u7D20\u7684\u6743\u91CD</li>
							<li>\u6743\u91CD\u8303\u56F4\u4ECE0\u52301\uFF0C\u6570\u503C\u8D8A\u9AD8\u8868\u793A\u8BE5\u56E0\u7D20\u8D8A\u91CD\u8981</li>
							<li>\u5982\u9700\u6062\u590D\u9ED8\u8BA4\u8BBE\u7F6E\uFF0C\u70B9\u51FB"\u91CD\u7F6E\u8BBE\u7F6E"\u6309\u94AE</li>
						</ul>
					</li>
					<li><strong>\u8BB0\u5F55\u7269\u54C1</strong>\uFF1A
						<ul style="margin-top: 5px; padding-left: 15px;">
							<li>\u6253\u5F00\u751F\u6210\u7684\u6570\u636E\u6587\u4EF6\uFF08\u9ED8\u8BA4\u4E3A minimalism_items.md\uFF09</li>
							<li>\u5728Markdown\u8868\u683C\u4E2D\u6DFB\u52A0\u65B0\u7684\u7269\u54C1\u8BB0\u5F55</li>
							<li>\u6309\u7167\u8868\u5934\u683C\u5F0F\u586B\u5199\u7269\u54C1\u4FE1\u606F\u548C\u5404\u9879\u8BC4\u5206</li>
							<li>\u65E5\u671F\u683C\u5F0F\u4E3A YYYY-MM-DD\uFF0C\u5982 2023-05-01</li>
						</ul>
					</li>
					<li><strong>\u67E5\u770B\u65E5\u5386\u89C6\u56FE</strong>\uFF1A
						<ul style="margin-top: 5px; padding-left: 15px;">
							<li>\u70B9\u51FB\u5DE6\u4FA7\u8FB9\u680F\u4E2D\u7684"\u6781\u7B80\u4E3B\u4E49\u6311\u6218\u65E5\u5386"\u56FE\u6807</li>
							<li>\u65E5\u5386\u89C6\u56FE\u4F1A\u663E\u793A\u5F53\u524D\u6708\u4EFD\u5DF2\u8BB0\u5F55\u7684\u7269\u54C1</li>
							<li>\u70B9\u51FB\u5361\u7247\u53EF\u4EE5\u7FFB\u8F6C\u67E5\u770B\u7269\u54C1\u8BE6\u7EC6\u4FE1\u606F</li>
							<li>\u9876\u90E8\u7EDF\u8BA1\u9762\u677F\u663E\u793A\u7269\u54C1\u603B\u6570\u548C\u5206\u7C7B\u7EDF\u8BA1</li>
						</ul>
					</li>
					<li><strong>\u8BC4\u5206\u89E3\u8BFB</strong>\uFF1A
						<ul style="margin-top: 5px; padding-left: 15px;">
							<li>80-100\u5206\uFF1A\u5FC5\u987B\u4FDD\u7559\u7684\u7269\u54C1</li>
							<li>60-79\u5206\uFF1A\u5EFA\u8BAE\u4FDD\u7559\u7684\u7269\u54C1</li>
							<li>40-59\u5206\uFF1A\u53EF\u7075\u6D3B\u5904\u7406\u7684\u7269\u54C1</li>
							<li>20-39\u5206\uFF1A\u63A8\u8350\u820D\u5F03\u7684\u7269\u54C1</li>
							<li>0-19\u5206\uFF1A\u5EFA\u8BAE\u7ACB\u5373\u5904\u7406\u7684\u7269\u54C1</li>
						</ul>
					</li>
					<li><strong>\u6570\u636E\u7BA1\u7406</strong>\uFF1A
						<ul style="margin-top: 5px; padding-left: 15px;">
							<li>\u6240\u6709\u6570\u636E\u4FDD\u5B58\u5728Markdown\u6587\u4EF6\u4E2D\uFF0C\u4FBF\u4E8E\u5907\u4EFD\u548C\u8FC1\u79FB</li>
							<li>\u53EF\u4EE5\u968F\u65F6\u7F16\u8F91\u6570\u636E\u6587\u4EF6\u4FEE\u6539\u5DF2\u6709\u8BB0\u5F55</li>
							<li>\u4FEE\u6539\u540E\u91CD\u65B0\u6253\u5F00\u65E5\u5386\u89C6\u56FE\u5373\u53EF\u770B\u5230\u66F4\u65B0</li>
						</ul>
					</li>
				</ol>
			</p>
		`;
  }
};
//# sourceMappingURL=data:application/json;base64,
